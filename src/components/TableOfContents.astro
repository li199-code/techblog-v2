---
// TableOfContents.astro
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

const { headings } = Astro.props;
const toc = buildToc(headings);

export interface Heading {
  depth: number;
  slug: string;
  text: string;
}

function buildToc(headings: Heading[]) {
  const toc: any[] = []; // 使用 any[] 临时解决类型问题，或者定义一个完整的 Heading 接口
  const parentHeadings = new Map<number, any>();

  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);

    if (heading.depth === 2) {
      toc.push(heading);
    } else if (heading.depth > 2) {
      // 寻找最近的父级 heading
      let parentDepth = heading.depth - 1;
      let parent = parentHeadings.get(parentDepth);

      // 如果父级不存在，向上一级寻找，直到找到或到达 depth 2
      while (!parent && parentDepth > 2) {
        parentDepth--;
        parent = parentHeadings.get(parentDepth);
      }

      // 如果找到了父级，将当前 heading 添加到其 subheadings
      if (parent) {
        parent.subheadings.push(heading);
      } else {
        // 如果没有合适的父级（极端情况），可以选择添加到 toc 根级别
        toc.push(heading);
      }
    }
  });
  return toc;
}
---

<details
  open
  class="animate rounded-lg border border-black/15 dark:border-white/20"
>
  <summary>Table of Contents</summary>
  <nav class="">
    <ul class="py-3">
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </nav>
</details>

<style>
  summary {
    @apply cursor-pointer rounded-t-lg px-3 py-1.5 font-medium transition-colors;
  }

  summary:hover {
    @apply bg-black/5 dark:bg-white/5;
  }

  details[open] summary {
    @apply bg-black/5 dark:bg-white/5;
  }
</style>
